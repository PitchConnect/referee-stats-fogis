name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
        python -m build --sdist --wheel --outdir dist
        pip install dist/*.whl
        pip install ".[dev]"
    - name: Lint with flake8
      run: |
        flake8 referee_stats_fogis tests
    - name: Check formatting with black
      run: |
        pip install black==24.1.1
        # Format with black, excluding the problematic file
        black --check --preview --force-exclude referee_stats_fogis/data/models.py referee_stats_fogis tests
        # Separately check models.py with verbose output
        echo "Checking models.py separately:"
        black --check --preview --verbose referee_stats_fogis/data/models.py || true
    - name: Check import sorting with isort
      run: |
        isort --check referee_stats_fogis tests
    - name: Type check with mypy
      run: |
        pip install types-PyYAML sqlalchemy-stubs
        mypy --config-file=.mypy.ini referee_stats_fogis
    - name: Check with pyupgrade
      run: |
        pip install pyupgrade
        pyupgrade --py310-plus $(find referee_stats_fogis tests -name "*.py")
    - name: Check with docformatter
      run: |
        pip install docformatter
        docformatter --check --wrap-summaries=88 --wrap-descriptions=88 $(find referee_stats_fogis tests -name "*.py")
    - name: Check with autoflake
      run: |
        pip install autoflake
        autoflake --check --remove-all-unused-imports --remove-unused-variables --expand-star-imports --remove-duplicate-keys $(find referee_stats_fogis tests -name "*.py")
    - name: Test with pytest
      run: |
        pytest --cov=referee_stats_fogis --cov-report=xml --cov-report=term tests/
    - name: Upload coverage report as artifact
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: ./coverage.xml
        retention-days: 1

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    - name: Build package
      run: |
        python -m build --sdist --wheel
    - name: Check package
      run: |
        twine check dist/*
    - name: Test installation from wheel
      run: |
        pip install dist/*.whl
        python -c "import referee_stats_fogis; print(referee_stats_fogis.__name__)"
    - name: Download coverage report
      uses: actions/download-artifact@v4
      with:
        name: coverage-report
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        fail_ci_if_error: false
        verbose: true
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
