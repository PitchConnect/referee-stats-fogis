name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
    - name: Lint with flake8
      run: |
        flake8 referee_stats_fogis tests
    - name: Check formatting with black
      run: |
        black --check --preview referee_stats_fogis tests
    - name: Check import sorting with isort
      run: |
        isort --check referee_stats_fogis tests
    - name: Type check with mypy
      run: |
        mypy referee_stats_fogis
    - name: Check with pyupgrade
      run: |
        pip install pyupgrade
        pyupgrade --py310-plus $(find referee_stats_fogis tests -name "*.py")
    - name: Check with docformatter
      run: |
        pip install docformatter
        docformatter --check --wrap-summaries=88 --wrap-descriptions=88 $(find referee_stats_fogis tests -name "*.py")
    - name: Check with autoflake
      run: |
        pip install autoflake
        autoflake --check --remove-all-unused-imports --remove-unused-variables $(find referee_stats_fogis tests -name "*.py")
    - name: Test with pytest
      run: |
        pytest --cov=referee_stats_fogis --cov-report=xml --cov-report=term tests/
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: true

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    - name: Build package
      run: |
        python -m build --sdist --wheel
    - name: Check package
      run: |
        twine check dist/*
    - name: Test installation from wheel
      run: |
        pip install dist/*.whl
        python -c "import referee_stats_fogis; print(referee_stats_fogis.__name__)"
    - name: Verify migrations directory is excluded
      run: |
        pip show referee_stats_fogis | grep -v "migrations"
