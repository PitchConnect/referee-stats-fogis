"""Initial migration for the database schema.

Revision ID: 5ee7a62d717d
Revises:
Create Date: 2025-04-17 00:02:02.663020
"""

from collections.abc import Sequence
from typing import Optional, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "5ee7a62d717d"
down_revision: str | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "clubs",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("fogis_id", sa.String(length=20), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "competition_categories",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "event_types",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=50), nullable=False),
        sa.Column("is_goal", sa.Boolean(), nullable=True),
        sa.Column("is_penalty", sa.Boolean(), nullable=True),
        sa.Column("is_card", sa.Boolean(), nullable=True),
        sa.Column("is_substitution", sa.Boolean(), nullable=True),
        sa.Column("is_control_event", sa.Boolean(), nullable=True),
        sa.Column("affects_score", sa.Boolean(), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "persons",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("first_name", sa.String(length=50), nullable=False),
        sa.Column("last_name", sa.String(length=50), nullable=False),
        sa.Column("personal_number", sa.String(length=20), nullable=True),
        sa.Column("email", sa.String(length=100), nullable=True),
        sa.Column("phone", sa.String(length=20), nullable=True),
        sa.Column("address", sa.String(length=200), nullable=True),
        sa.Column("postal_code", sa.String(length=20), nullable=True),
        sa.Column("city", sa.String(length=50), nullable=True),
        sa.Column("country", sa.String(length=50), nullable=True),
        sa.Column("fogis_id", sa.String(length=20), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "referee_roles",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=50), nullable=False),
        sa.Column("short_name", sa.String(length=10), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "result_types",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=50), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "venues",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("latitude", sa.Float(), nullable=True),
        sa.Column("longitude", sa.Float(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "competitions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("season", sa.String(length=20), nullable=True),
        sa.Column("category_id", sa.Integer(), nullable=True),
        sa.Column("gender_id", sa.Integer(), nullable=True),
        sa.Column("age_category_id", sa.Integer(), nullable=True),
        sa.Column("fogis_id", sa.String(length=20), nullable=True),
        sa.ForeignKeyConstraint(
            ["category_id"],
            ["competition_categories.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "referees",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("person_id", sa.Integer(), nullable=False),
        sa.Column("referee_number", sa.String(length=20), nullable=True),
        sa.Column("fogis_id", sa.String(length=20), nullable=True),
        sa.ForeignKeyConstraint(
            ["person_id"],
            ["persons.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "teams",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("club_id", sa.Integer(), nullable=False),
        sa.Column("fogis_id", sa.String(length=20), nullable=True),
        sa.ForeignKeyConstraint(
            ["club_id"],
            ["clubs.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "matches",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("match_nr", sa.String(length=20), nullable=False),
        sa.Column("date", sa.DateTime(), nullable=False),
        sa.Column("time", sa.String(length=10), nullable=False),
        sa.Column("venue_id", sa.Integer(), nullable=True),
        sa.Column("competition_id", sa.Integer(), nullable=False),
        sa.Column("football_type_id", sa.Integer(), nullable=False),
        sa.Column("spectators", sa.Integer(), nullable=True),
        sa.Column("status", sa.String(length=20), nullable=True),
        sa.Column("is_walkover", sa.Boolean(), nullable=True),
        sa.Column("fogis_id", sa.String(length=20), nullable=True),
        sa.ForeignKeyConstraint(
            ["competition_id"],
            ["competitions.id"],
        ),
        sa.ForeignKeyConstraint(
            ["venue_id"],
            ["venues.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "team_contacts",
        sa.Column("team_id", sa.Integer(), nullable=False),
        sa.Column("person_id", sa.Integer(), nullable=False),
        sa.Column("is_reserve", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(
            ["person_id"],
            ["persons.id"],
        ),
        sa.ForeignKeyConstraint(
            ["team_id"],
            ["teams.id"],
        ),
        sa.PrimaryKeyConstraint("team_id", "person_id"),
    )
    op.create_table(
        "match_results",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("match_id", sa.Integer(), nullable=False),
        sa.Column("result_type_id", sa.Integer(), nullable=False),
        sa.Column("home_goals", sa.Integer(), nullable=False),
        sa.Column("away_goals", sa.Integer(), nullable=False),
        sa.Column("fogis_id", sa.String(length=20), nullable=True),
        sa.ForeignKeyConstraint(
            ["match_id"],
            ["matches.id"],
        ),
        sa.ForeignKeyConstraint(
            ["result_type_id"],
            ["result_types.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "match_teams",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("match_id", sa.Integer(), nullable=False),
        sa.Column("team_id", sa.Integer(), nullable=False),
        sa.Column("is_home_team", sa.Boolean(), nullable=False),
        sa.Column("fogis_id", sa.String(length=20), nullable=True),
        sa.ForeignKeyConstraint(
            ["match_id"],
            ["matches.id"],
        ),
        sa.ForeignKeyConstraint(
            ["team_id"],
            ["teams.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "referee_assignments",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("match_id", sa.Integer(), nullable=False),
        sa.Column("referee_id", sa.Integer(), nullable=False),
        sa.Column("role_id", sa.Integer(), nullable=False),
        sa.Column("status", sa.String(length=20), nullable=True),
        sa.Column("fogis_id", sa.String(length=20), nullable=True),
        sa.ForeignKeyConstraint(
            ["match_id"],
            ["matches.id"],
        ),
        sa.ForeignKeyConstraint(
            ["referee_id"],
            ["referees.id"],
        ),
        sa.ForeignKeyConstraint(
            ["role_id"],
            ["referee_roles.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "match_participants",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("match_id", sa.Integer(), nullable=False),
        sa.Column("match_team_id", sa.Integer(), nullable=False),
        sa.Column("player_id", sa.Integer(), nullable=False),
        sa.Column("jersey_number", sa.Integer(), nullable=True),
        sa.Column("is_captain", sa.Boolean(), nullable=True),
        sa.Column("is_substitute", sa.Boolean(), nullable=True),
        sa.Column("substitution_in_minute", sa.Integer(), nullable=True),
        sa.Column("substitution_out_minute", sa.Integer(), nullable=True),
        sa.Column("team_section_id", sa.Integer(), nullable=True),
        sa.Column("position_number", sa.Integer(), nullable=True),
        sa.Column("ejection_info", sa.Text(), nullable=True),
        sa.Column("is_playing_leader", sa.Boolean(), nullable=True),
        sa.Column("is_responsible", sa.Boolean(), nullable=True),
        sa.Column("accumulated_warnings", sa.Integer(), nullable=True),
        sa.Column("suspension_description", sa.Text(), nullable=True),
        sa.Column("fogis_id", sa.String(length=20), nullable=True),
        sa.ForeignKeyConstraint(
            ["match_id"],
            ["matches.id"],
        ),
        sa.ForeignKeyConstraint(
            ["match_team_id"],
            ["match_teams.id"],
        ),
        sa.ForeignKeyConstraint(
            ["player_id"],
            ["persons.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "match_events",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("match_id", sa.Integer(), nullable=False),
        sa.Column("participant_id", sa.Integer(), nullable=False),
        sa.Column("event_type_id", sa.Integer(), nullable=False),
        sa.Column("match_team_id", sa.Integer(), nullable=False),
        sa.Column("minute", sa.Integer(), nullable=True),
        sa.Column("period", sa.Integer(), nullable=True),
        sa.Column("comment", sa.Text(), nullable=True),
        sa.Column("home_score", sa.Integer(), nullable=False),
        sa.Column("away_score", sa.Integer(), nullable=False),
        sa.Column("position_x", sa.Integer(), nullable=True),
        sa.Column("position_y", sa.Integer(), nullable=True),
        sa.Column("related_event_id", sa.Integer(), nullable=True),
        sa.Column("fogis_id", sa.String(length=20), nullable=True),
        sa.ForeignKeyConstraint(
            ["event_type_id"],
            ["event_types.id"],
        ),
        sa.ForeignKeyConstraint(
            ["match_id"],
            ["matches.id"],
        ),
        sa.ForeignKeyConstraint(
            ["match_team_id"],
            ["match_teams.id"],
        ),
        sa.ForeignKeyConstraint(
            ["participant_id"],
            ["match_participants.id"],
        ),
        sa.ForeignKeyConstraint(
            ["related_event_id"],
            ["match_events.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("match_events")
    op.drop_table("match_participants")
    op.drop_table("referee_assignments")
    op.drop_table("match_teams")
    op.drop_table("match_results")
    op.drop_table("team_contacts")
    op.drop_table("matches")
    op.drop_table("teams")
    op.drop_table("referees")
    op.drop_table("competitions")
    op.drop_table("venues")
    op.drop_table("result_types")
    op.drop_table("referee_roles")
    op.drop_table("persons")
    op.drop_table("event_types")
    op.drop_table("competition_categories")
    op.drop_table("clubs")
    # ### end Alembic commands ###
